{"version":3,"sources":["components/Router.jsx","api/cities.js","components/Link.jsx","components/Modal.jsx","components/StartPage.jsx","components/Weather.jsx","components/Picture.jsx","api/weather.js","api/pictures.js","App.js","reportWebVitals.js","index.js"],"names":["Router","path","children","useState","window","location","pathname","currentPath","setCurrentPath","useEffect","onLocationChange","addEventListener","removeEventListener","apiKey","process","fetchCities","query","a","mapboxUrl","fetch","response","json","features","queryResults","map","p","id","name","place_name","latitude","center","longitude","Link","className","href","onClick","event","metaKey","ctrlKey","preventDefault","history","pushState","navEvent","PopStateEvent","dispatchEvent","Modal","shown","close","setLatLon","setCityName","setQuery","results","setResults","loading","setLoading","closeModal","length","fetchMapBoxData","e","stopPropagation","type","placeholder","value","onChange","target","res","StartPage","md","showModal","hideModal","Weather","weatherObj","latlon","cityName","photo","weatherPictureStyle","displayOrLoad","parameter","replace","style","temp","capitalize","desc","photographer_url","photographer","Picture","details","setDisplay","rotate","transform","width","height","src","original","download","fetchWeather","owmAPIURL","fetchPictures","pexelsURL","headers","Headers","then","photos","App","setMd","w_obj","m_obj","setWeather","setPhoto","background","setBackground","backgroundImage","landscape","fetchW","weather","main","description","fetchP","random","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3e6cc85.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst Router = ({ path, children }) => {\r\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    // define callback as separate function so it can be removed later with cleanup function\r\n    const onLocationChange = () => {\r\n      // update path state to current window URL\r\n      setCurrentPath(window.location.pathname);\r\n    };\r\n\r\n    // listen for popstate event\r\n    window.addEventListener(\"popstate\", onLocationChange);\r\n\r\n    // clean up event listener\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", onLocationChange);\r\n    };\r\n  }, []);\r\n\r\n  return currentPath === path ? children : null;\r\n};\r\n\r\nexport default Router;\r\n","const apiKey = process.env.REACT_APP_MAPBOX_API_ACCESS_TOKEN;\r\n\r\nexport default async function fetchCities(query) {\r\n    const mapboxUrl = `https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=${apiKey}&types=locality,place&limit=5&autocomplete=true&language=fr`;\r\n    const response = await fetch(mapboxUrl);\r\n    const { features } = await response.json();\r\n    //     if (!features || features.length < 1) {\r\n    //       return { error: 500 };\r\n    //     }\r\n    const queryResults = features.map((p) => ({\r\n        id: p.id,\r\n        name: p.place_name,\r\n        latitude: p.center[1],\r\n        longitude: p.center[0],\r\n    }));\r\n    return queryResults;\r\n}","import React from \"react\";\r\nimport \"../styles/Link.scss\";\r\n\r\nconst Link = ({ className, href, children }) => {\r\n  const onClick = (event) => {\r\n    // if ctrl or meta key are held on click, allow default behavior of opening link in new tab\r\n    if (event.metaKey || event.ctrlKey) {\r\n      return;\r\n    }\r\n\r\n    // prevent full page reload\r\n    event.preventDefault();\r\n    // update url\r\n    window.history.pushState({}, \"\", href);\r\n\r\n    // communicate to Routes that URL has changed\r\n    const navEvent = new PopStateEvent(\"popstate\");\r\n    window.dispatchEvent(navEvent);\r\n  };\r\n\r\n  return (\r\n    <a className={className} href={href} onClick={onClick}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"../styles/Modal.scss\";\r\nimport fetchCities from \"../api/cities\";\r\nimport Link from \"./Link\";\r\n\r\nexport default function Modal({ shown, close, setLatLon, setCityName }) {\r\n  // local\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMapBoxData = async () => {\r\n      if (query && query.length > 0) {\r\n        setLoading(true);\r\n        const queryResults = await fetchCities(query);\r\n        setResults(queryResults);\r\n        setLoading(false);\r\n      } else {\r\n        setResults([]);\r\n      }\r\n    };\r\n    fetchMapBoxData();\r\n  }, [query]);\r\n\r\n  function closeModal() {\r\n    close();\r\n    setResults([]);\r\n    setQuery(\"\");\r\n  }\r\n\r\n  return shown ? (\r\n    <>\r\n      <div\r\n        className=\"modal\"\r\n        onClick={() => {\r\n          closeModal();\r\n        }}\r\n      >\r\n        <div\r\n          className=\"modal-body\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          <div className=\"search-box\">\r\n            <i className=\"modal-search-icon las la-search\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for a location...\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n            {loading && <i className=\"loader las la-spinner\"></i>}\r\n          </div>\r\n          {results.length > 0 && (\r\n            <div className=\"results\">\r\n              {results.map((res) => {\r\n                return (\r\n                  <Link href=\"/weather\" className=\"modalLink\" key={res.id}>\r\n                    <div\r\n                      className=\"result\"\r\n                      onClick={() => {\r\n                        setLatLon({\r\n                          latitude: res.latitude,\r\n                          longitude: res.longitude,\r\n                        });\r\n                        setCityName(res.name);\r\n                        closeModal();\r\n                      }}\r\n                    >\r\n                      <i className=\"modal-result-icon las la-map-marker\"></i>\r\n                      <p>{res.name}</p>\r\n                    </div>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n}\r\n","import Modal from \"./Modal\";\r\nimport \"../styles/StartPage.scss\";\r\n\r\nexport default function StartPage({\r\n  setCityName,\r\n  setLatLon,\r\n  md,\r\n  showModal,\r\n  hideModal,\r\n}) {\r\n  return (\r\n    <>\r\n      <header className=\"Start-header\">\r\n        <h1>travy</h1>\r\n      </header>\r\n      <main className=\"Start-main\">\r\n        <Modal\r\n          close={hideModal}\r\n          shown={md}\r\n          setLatLon={setLatLon}\r\n          setCityName={setCityName}\r\n        />\r\n        <section>\r\n          <h2>A minimalist weather app.</h2>\r\n          <p>\r\n            Real-time weather from{\" \"}\r\n            <a href=\"https://openweathermap.org\"> OpenWeatherMap</a>.\r\n            <br />\r\n            High quality pictures from{\" \"}\r\n            <a href=\"https://www.pexels.com\">Pexels</a>.\r\n            <br />\r\n            Cities from <a href=\"https://www.mapbox.com\">Mapbox</a>.\r\n          </p>\r\n\r\n          <div className=\"Start-cta\" onClick={showModal}>\r\n            Get started\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","import \"../styles/Weather.scss\";\r\nimport Modal from \"./Modal\";\r\nimport \"lodash.capitalize\";\r\nimport capitalize from \"lodash.capitalize\";\r\nimport Link from \"./Link\";\r\n\r\nexport default function Weather({\r\n  weatherObj,\r\n  setCityName,\r\n  latlon,\r\n  setLatLon,\r\n  md,\r\n  showModal,\r\n  hideModal,\r\n  cityName,\r\n  photo,\r\n  weatherPictureStyle,\r\n}) {\r\n  function displayOrLoad(parameter) {\r\n    return parameter !== null && parameter !== \"\" ? parameter : \"Loading\";\r\n  }\r\n  function refresh() {\r\n    setLatLon({\r\n      latitude: latlon.latitude,\r\n      longitude: latlon.longitude,\r\n    });\r\n  }\r\n\r\n  if (!latlon || !cityName) window.location.replace(\"/\");\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={hideModal}\r\n        shown={md}\r\n        setLatLon={setLatLon}\r\n        setCityName={setCityName}\r\n      />\r\n      <div className=\"weather\" style={weatherPictureStyle}>\r\n        <div className=\"top-bar\">\r\n          <h2 onClick={showModal}>{displayOrLoad(cityName)}</h2>\r\n          {latlon !== null && <i className=\"las la-sync\" onClick={refresh}></i>}\r\n        </div>\r\n        <div className=\"weather-info\">\r\n          <h1>{displayOrLoad(weatherObj.temp)}°C</h1>\r\n          <div className=\"weather-description\">\r\n            <h3>{displayOrLoad(capitalize(weatherObj.desc))}</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-bar\">\r\n          {photo !== null && (\r\n            <>\r\n              <div className=\"credits\">\r\n                <Link href={photo.photographer_url}>\r\n                  <p>Photo par {displayOrLoad(photo.photographer)}</p>\r\n                </Link>\r\n              </div>\r\n              <Link href=\"/picture\">\r\n                <div className=\"show-picture\">\r\n                  <i className=\"las la-eye\"></i>\r\n                </div>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"../styles/Picture.scss\";\r\nimport Link from \"./Link\";\r\nimport { useState } from \"react\";\r\nexport default function Picture({ photo, weatherPictureStyle }) {\r\n  const [details, setDisplay] = useState(false);\r\n\r\n  const rotate = {\r\n    transform: details ? \"rotate(180deg)\" : \"rotate(0deg)\",\r\n  };\r\n  function toggleDisplay() {\r\n    setDisplay(!details);\r\n  }\r\n\r\n  if (!photo) window.location.replace(\"/\");\r\n  return (\r\n    <>\r\n      <div className=\"picture\" style={weatherPictureStyle}>\r\n        <div className=\"top-bar\">\r\n          {details && (\r\n            <div className=\"details\">\r\n              <p>\r\n                Photo par <b>{photo.photographer}</b>\r\n              </p>\r\n              <p>\r\n                Taille{\" \"}\r\n                <b>\r\n                  {photo.width} x {photo.height}\r\n                </b>\r\n              </p>\r\n              <small>© Pexels</small>\r\n            </div>\r\n          )}\r\n          <i\r\n            className=\"las la-angle-down\"\r\n            onClick={toggleDisplay}\r\n            style={rotate}\r\n          ></i>\r\n        </div>\r\n        <div className=\"bottom-bar\">\r\n          <Link href=\"/weather\" className=\"return\">\r\n            <i className=\"las la-angle-left\"></i>\r\n            <p>Retour</p>\r\n          </Link>\r\n\r\n          <a href={photo.src.original} download>\r\n            <div className=\"show-picture\">\r\n              <i className=\"las la-arrow-down\"></i>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const apiKey = process.env.REACT_APP_OWM_KEY;\r\n\r\nexport default async function fetchWeather(latitude, longitude) {\r\n    const owmAPIURL = `https://api.openweathermap.org/data/2.5/weather?appid=${apiKey}&lat=${latitude}&lon=${longitude}&units=metric&lang=fr`;\r\n    const response = await fetch(owmAPIURL);\r\n    return await response.json();\r\n}","const apiKey = process.env.REACT_APP_PEXELS_API_KEY;\r\n\r\nexport default async function fetchPictures(query) {\r\n    const pexelsURL = `https://api.pexels.com/v1/search?query=${query}&locale=fr-FR&page=1&per_page=20`;\r\n    const headers = new Headers({ \"Authorization\": apiKey });\r\n    const { photos } = await fetch(pexelsURL, { headers: headers }).then((res) => res.json());\r\n    return photos;\r\n\r\n}","import './App.scss';\nimport Router from './components/Router';\nimport StartPage from './components/StartPage';\nimport Weather from './components/Weather';\nimport Picture from './components/Picture';\nimport { useState, useEffect } from \"react\";\nimport fetchWeather from \"./api/weather\";\nimport fetchPictures from './api/pictures';\nimport random from \"lodash.random\";\n\nfunction App() {\n  // Modal\n  const [md, setMd] = useState(false);\n  // Name of city + coordinates\n  const [cityName, setCityName] = useState(\"\");\n  const [latlon, setLatLon] = useState(null);\n  // Weather informations\n  const [weatherObj, setWeather] = useState({ desc: null, temp: null, w_obj: null, m_obj: null });\n  // Picture\n  const [photo, setPhoto] = useState(null);\n  // CSS property for background image\n  const [background, setBackground] = useState(\"none\");\n\n  function showModal() {\n    setMd(true);\n  }\n  function hideModal() {\n    setMd(false);\n  }\n  const weatherPictureStyle = {\n    backgroundImage: background,\n  };\n\n  useEffect(() => {\n    setBackground(photo !== null ? \"url(\" + photo.src.landscape + \")\" : \"none\");\n  }, [background, photo]);\n\n  useEffect(() => {\n    const fetchW = async () => {\n      const { weather, main } = await fetchWeather(\n        latlon.latitude,\n        latlon.longitude\n      );\n      setWeather({ desc: weather[0].description, temp: main.temp, w_obj: weather, m_obj: main });\n    }\n    const fetchP = async () => {\n      const photos = await fetchPictures(cityName);\n      // setPhotos(photos);\n      setPhoto(photos[random(photos.length)]);\n    }\n    if (latlon !== null && latlon !== undefined) {\n\n      fetchW();\n      fetchP();\n    }\n\n  }, [latlon, cityName]);\n  return (\n    <div className=\"App\">\n      <Router path=\"/\">\n        <StartPage setCityName={setCityName} latlon={latlon} setLatLon={setLatLon} md={md} showModal={showModal} hideModal={hideModal} />\n      </Router>\n      <Router path=\"/weather\">\n        <Weather weatherObj={weatherObj} setCityName={setCityName} latlon={latlon} setLatLon={setLatLon} md={md} showModal={showModal} hideModal={hideModal} cityName={cityName} photo={photo} weatherPictureStyle={weatherPictureStyle} />\n      </Router>\n      <Router path=\"/picture\">\n        <Picture photo={photo} weatherPictureStyle={weatherPictureStyle} />\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}